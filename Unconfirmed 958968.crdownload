# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SzMvQDwoU3DSOtmWHlsMXvwfX0evdN4n
"""

import pandas as pd
from sklearn import linear_model
import matplotlib.pyplot as plt
import plotly.express as px
import seaborn as sns
import statsmodels.api as sma
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import PolynomialFeatures
import numpy as np

water_quality_data = pd.read_csv('Water Quality Testing.csv')
water_quality_data

water_quality_data.describe()

water_quality_data.info()

reg = linear_model.LinearRegression()
reg.fit(water_quality_data[['pH', 'Temperature (°C)', 'Turbidity (NTU)', 'Dissolved Oxygen (mg/L)']], water_quality_data['Conductivity (µS/cm)'])

reg.intercept_

reg.coef_

reg_pred = reg.intercept_ + reg.coef_
reg_pred

plt.plot(reg_pred, marker='x')
plt.show()

a = water_quality_data['pH']
b = water_quality_data['Temperature (°C)']
a = np.array(a)
b = np.array(b)
a = sma.add_constant(a)
model = sma.OLS(b, a).fit()
print(model.summary())

sns.set_style('whitegrid')
sns.pairplot(water_quality_data, kind='scatter', height=3.5)

plt.scatter(x=water_quality_data['Dissolved Oxygen (mg/L)'], y=water_quality_data['Conductivity (µS/cm)'], marker='x')
plt.show()

sns.set_style('whitegrid')
sns.pairplot(water_quality_data[['pH', 'Temperature (°C)', 'Turbidity (NTU)', 'Dissolved Oxygen (mg/L)', 'Conductivity (µS/cm)']], hue='Conductivity (µS/cm)')

sns.relplot(water_quality_data, x='Turbidity (NTU)', y='Dissolved Oxygen (mg/L)')

sns.regplot(water_quality_data, x='Turbidity (NTU)', y='Dissolved Oxygen (mg/L)')

sns.set_style("darkgrid")
sns.histplot(water_quality_data, x='pH')

sns.lmplot(water_quality_data, x='Temperature (°C)', y='Conductivity (µS/cm)', line_kws={'color':'black'})

a = water_quality_data['Turbidity (NTU)']
b = water_quality_data['Dissolved Oxygen (mg/L)']
features = ['Turbidity (NTU)', 'Dissolved Oxygen (mg/L)']
a_train = water_quality_data[features]
a_test = water_quality_data[features]
b_train = water_quality_data['Conductivity (µS/cm)']
regre = linear_model.LinearRegression()
regre.fit(a_train, b_train)
prediction = regre.predict(a_test)
prediction

print(prediction.shape)

submission = water_quality_data[['Sample ID']]
submission

submission['Conductivity (µS/cm)'] = prediction

submission

submission = water_quality_data[['Sample ID', 'Turbidity (NTU)', 'Dissolved Oxygen (mg/L)']]
submission

submission['Conductivity (µS/cm)'] = prediction
submission

sns.lmplot(submission, x='Turbidity (NTU)', y='Conductivity (µS/cm)')

p = submission['Turbidity (NTU)']
q = submission['Conductivity (µS/cm)']
p = np.array(p)
q = np.array(q)
p = sma.add_constant(p)
model = sma.OLS(q, p).fit()
print(model.summary())

columns = ['pH', 'Temperature (°C)', 'Turbidity (NTU)', 'Dissolved Oxygen (mg/L)']
a_train = water_quality_data[columns]
a_test = water_quality_data[columns]
b_train = water_quality_data['Conductivity (µS/cm)']
Regression = linear_model.LinearRegression()
Regression.fit(a_train, b_train)
predictions = Regression.predict(a_test)
predictions

water_quality_data['Prediction of Conductivity (µS/cm)'] = predictions
water_quality_data

